export interface List {
  id: string;
  title: string;
  emoji: string;
  description: string;
  tags: string[];         // Tags associadas à lista
  ownerId: string;
  visibility: 'public' | 'private';

  // Listas automáticas
  isAutoGenerated: boolean; // true para "Quero Visitar", "Favoritas"
  canDelete: boolean;       // false para listas automáticas
  canRename: boolean;       // false para listas automáticas
  autoListType: string;     // "want_to_visit" | "favorites" | ""

  // Contadores
  placesCount: number;

  // Timestamps
  createdAt: string;
  updatedAt: string;

  // Preview places for UI
  previewPlaces?: PreviewPlace[];
}

export interface PreviewPlace {
  id: string;
  name: string;
  category: string;
}

export interface ListPlace {
  id: string;              // listId_placeId
  listId: string;
  placeId: string;
  addedBy: string;
  addedAt: string;
  order: number;           // Ordem na lista
  personalNote?: string;
  tags?: string[];
}

export interface AddPlaceToListRequest {
  listId: string;
  placeId: string;
  personalNote?: string;
  tags?: string[];
}

export interface AddPlaceToListResponse {
  listPlace: ListPlace;
}

export interface GetListPlacesResponse {
  places: ListPlaceWithDetails[];
}

export interface ListPlaceWithDetails extends ListPlace {
  place?: {
    id: string;
    name: string;
    address: string;
    coordinates: {
      lat: number;
      lng: number;
    };
    rating?: number;
    priceLevel?: number;
    photos?: string[];
    types?: string[];
    phone?: string;
    website?: string;
  };
}

export interface ListFormData {
  title: string;
  emoji: string;
  description: string;
  visibility: 'public' | 'private';
  tags: string[];
}

export interface CreateListRequest {
  title: string;
  emoji: string;
  description: string;
  visibility: 'public' | 'private';
  tags?: string[];
}

export interface UpdateListRequest {
  listId: string;
  title?: string;
  emoji?: string;
  description?: string;
  visibility?: 'public' | 'private';
  tags?: string[];
}

export interface GetUserListsResponse {
  lists: List[];
}

export interface ListError {
  code: string;
  message: string;
}
